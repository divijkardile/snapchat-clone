[{"C:\\Users\\kardi\\Desktop\\snapchat-clone\\src\\index.js":"1","C:\\Users\\kardi\\Desktop\\snapchat-clone\\src\\App.js":"2","C:\\Users\\kardi\\Desktop\\snapchat-clone\\src\\serviceWorker.js":"3","C:\\Users\\kardi\\Desktop\\snapchat-clone\\src\\app\\store.js":"4","C:\\Users\\kardi\\Desktop\\snapchat-clone\\src\\features\\appSlice.js":"5","C:\\Users\\kardi\\Desktop\\snapchat-clone\\src\\WebcamCapture.js":"6","C:\\Users\\kardi\\Desktop\\snapchat-clone\\src\\features\\cameraSlice.js":"7","C:\\Users\\kardi\\Desktop\\snapchat-clone\\src\\Preview.js":"8","C:\\Users\\kardi\\Desktop\\snapchat-clone\\src\\firebase.js":"9","C:\\Users\\kardi\\Desktop\\snapchat-clone\\src\\Chats.js":"10","C:\\Users\\kardi\\Desktop\\snapchat-clone\\src\\Chat.js":"11","C:\\Users\\kardi\\Desktop\\snapchat-clone\\src\\ChatView.js":"12","C:\\Users\\kardi\\Desktop\\snapchat-clone\\src\\Login.js":"13"},{"size":644,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":1596,"mtime":1610564611417,"results":"16","hashOfConfig":"15"},{"size":5141,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":264,"mtime":1610386697319,"results":"18","hashOfConfig":"15"},{"size":745,"mtime":1610477945077,"results":"19","hashOfConfig":"15"},{"size":1233,"mtime":1610389431314,"results":"20","hashOfConfig":"15"},{"size":545,"mtime":1610386623923,"results":"21","hashOfConfig":"15"},{"size":2189,"mtime":1610474358896,"results":"22","hashOfConfig":"15"},{"size":673,"mtime":1610303791186,"results":"23","hashOfConfig":"15"},{"size":1531,"mtime":1610565068060,"results":"24","hashOfConfig":"15"},{"size":1262,"mtime":1610563123730,"results":"25","hashOfConfig":"15"},{"size":1244,"mtime":1610562982531,"results":"26","hashOfConfig":"15"},{"size":1001,"mtime":1610564211693,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"tz76ca",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\kardi\\Desktop\\snapchat-clone\\src\\index.js",[],["58","59"],"C:\\Users\\kardi\\Desktop\\snapchat-clone\\src\\App.js",["60"],"C:\\Users\\kardi\\Desktop\\snapchat-clone\\src\\serviceWorker.js",[],"C:\\Users\\kardi\\Desktop\\snapchat-clone\\src\\app\\store.js",[],"C:\\Users\\kardi\\Desktop\\snapchat-clone\\src\\features\\appSlice.js",[],"C:\\Users\\kardi\\Desktop\\snapchat-clone\\src\\WebcamCapture.js",["61","62"],"import React, { useState, useRef, useCallback } from \"react\";\r\nimport \"./WebcamCapture.css\";\r\nimport Webcam from \"react-webcam\";\r\nimport { RadioButtonUnchecked } from \"@material-ui/icons\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setCameraImage } from \"./features/cameraSlice\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst videoConstraints = {\r\n  width: 250,\r\n  height: 400,\r\n  facingMode: \"user\",\r\n};\r\n\r\nfunction WebcamCapture() {\r\n  const webcamref = useRef(null);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const capture = useCallback(() => {\r\n    const imageSrc = webcamref.current.getScreenshot();\r\n    dispatch(setCameraImage(imageSrc));\r\n    history.replace(\"/preview\");\r\n  }, [webcamref]);\r\n\r\n  return (\r\n    <div className=\"webcamCapture\">\r\n      <Webcam\r\n        audio={false}\r\n        height={videoConstraints.height}\r\n        ref={webcamref}\r\n        screenshotFormat=\"image/jpeg\"\r\n        width={videoConstraints.width}\r\n        videoConstraints={videoConstraints}\r\n      />\r\n      <RadioButtonUnchecked\r\n        className=\"webcamCapture__button\"\r\n        onClick={capture}\r\n        fontSize=\"large\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WebcamCapture;\r\n","C:\\Users\\kardi\\Desktop\\snapchat-clone\\src\\features\\cameraSlice.js",[],"C:\\Users\\kardi\\Desktop\\snapchat-clone\\src\\Preview.js",["63","64"],"import {\r\n  AttachFile,\r\n  Close,\r\n  Create,\r\n  Crop,\r\n  MusicNote,\r\n  Note,\r\n  Send,\r\n  TextFields,\r\n  Timer,\r\n} from \"@material-ui/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { resetCameraImage, selectcameraImage } from \"./features/cameraSlice\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport \"./Preview.css\";\r\nimport { db, storage } from \"./firebase\";\r\nimport firebase from \"firebase\";\r\n\r\nfunction Preview() {\r\n  const cameraImage = useSelector(selectcameraImage);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (!cameraImage) {\r\n      history.replace(\"/\");\r\n    }\r\n  }, [cameraImage, history]);\r\n\r\n  const closePreview = () => {\r\n    dispatch(resetCameraImage());\r\n    history.replace(\"/\");\r\n  };\r\n\r\n  const sendPost = () => {\r\n    const id = uuid();\r\n    const uploadTask = storage\r\n      .ref(`posts/${id}`)\r\n      .putString(cameraImage, \"data_url\");\r\n\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      null,\r\n      (error) => {\r\n        alert(error);\r\n      },\r\n      () => {\r\n        //Complete function\r\n        storage\r\n          .ref(\"posts\")\r\n          .child(id)\r\n          .getDownloadURL()\r\n          .then((url) => {\r\n            db.collection(\"posts\").add({\r\n              imageUrl: url,\r\n              username: \"Divij\",\r\n              read: false,\r\n              timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            });\r\n            history.replace(\"/chats\");\r\n          });\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"preview\">\r\n      <Close className=\"preview__close\" onClick={closePreview} />\r\n      <div className=\"preview__toolbarRight\">\r\n        <TextFields />\r\n        <Create />\r\n        <Note />\r\n        <MusicNote />\r\n        <AttachFile />\r\n        <Crop />\r\n        <Timer />\r\n      </div>\r\n      <img src={cameraImage} alt=\"Photo\" />\r\n      <div onClick={sendPost} className=\"preview__footer\">\r\n        <h2>Send</h2>\r\n        <Send fontSize=\"small\" className=\"preview__send\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Preview;\r\n","C:\\Users\\kardi\\Desktop\\snapchat-clone\\src\\firebase.js",[],"C:\\Users\\kardi\\Desktop\\snapchat-clone\\src\\Chats.js",[],"C:\\Users\\kardi\\Desktop\\snapchat-clone\\src\\Chat.js",[],"C:\\Users\\kardi\\Desktop\\snapchat-clone\\src\\ChatView.js",["65","66"],"import React, { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./ChatView.css\";\r\nimport { selectSelectedImage } from \"./features/appSlice\";\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\n\r\nfunction ChatView() {\r\n  const selectedImage = useSelector(selectSelectedImage);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!selectedImage) {\r\n      exit();\r\n    }\r\n  }, [selectedImage]);\r\n\r\n  const exit = () => {\r\n    history.replace(\"/chats\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatview\">\r\n      <img src={selectedImage} alt=\"image\" onClick={exit} />\r\n      <div className=\"chatview__timer\">\r\n        <CountdownCircleTimer\r\n          isPlaying\r\n          duration={10}\r\n          strokeWidth={6}\r\n          size={50}\r\n          colors={[\r\n            [\"#004777\", 0.33],\r\n            [\"#F7B801\", 0.33],\r\n            [\"#A30000\", 0.33],\r\n          ]}\r\n        >\r\n          {({ remainingTime }) => {\r\n            if (remainingTime === 0) {\r\n              exit();\r\n            }\r\n            return remainingTime;\r\n          }}\r\n        </CountdownCircleTimer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatView;\r\n","C:\\Users\\kardi\\Desktop\\snapchat-clone\\src\\Login.js",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":31,"column":6,"nodeType":"73","endLine":31,"endColumn":8,"suggestions":"74"},{"ruleId":"75","severity":1,"message":"76","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":25},{"ruleId":"71","severity":1,"message":"79","line":24,"column":6,"nodeType":"73","endLine":24,"endColumn":17,"suggestions":"80"},{"ruleId":"75","severity":1,"message":"76","line":12,"column":28,"nodeType":"77","messageId":"78","endLine":12,"endColumn":36},{"ruleId":"81","severity":1,"message":"82","line":80,"column":7,"nodeType":"83","endLine":80,"endColumn":44},{"ruleId":"71","severity":1,"message":"84","line":16,"column":6,"nodeType":"73","endLine":16,"endColumn":21,"suggestions":"85"},{"ruleId":"81","severity":1,"message":"82","line":24,"column":7,"nodeType":"83","endLine":24,"endColumn":61},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["88"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","React Hook useCallback has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["89"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'exit'. Either include it or remove the dependency array.",["90"],"no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},"Update the dependencies array to be: [dispatch]",{"range":"97","text":"98"},"Update the dependencies array to be: [dispatch, history]",{"range":"99","text":"100"},"Update the dependencies array to be: [exit, selectedImage]",{"range":"101","text":"102"},[929,931],"[dispatch]",[739,750],"[dispatch, history]",[485,500],"[exit, selectedImage]"]